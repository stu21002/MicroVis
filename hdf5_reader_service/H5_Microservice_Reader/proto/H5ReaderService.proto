syntax = "proto3";



///////
message Empty {}

message StatusResponse {
  bool status = 1;
  string statusMessage = 2;
}

message FileOpenRequest {
  string filename = 1;
//   string hdu = 2;
//   string uuid = 3;
}

message FileCloseRequest {
  string uuid = 1;
}

//////////////

message FileInfoRequest {
  string uuid = 1;
  string filename = 2;
}

message FileInfoResponse {
    bool success = 1;
    FileInfo fileInfo = 2;
    FileDimensions fileDimensions = 3;
}

message FileInfo {
  string name = 1;
  // FileType type = 2;
  sfixed64 size = 3;
  // repeated string HDU_list = 4;
  sfixed64 date = 5;
}

message FileDimensions {
  // Number of dimensions of the image file
  sfixed32 dimensions = 1;
  // Width of the XY plane
  sfixed32 width = 2;
  // Height of the XY plane
  sfixed32 height = 3;
  // Number of channels
  sfixed32 depth = 4;
  // Number of Stokes parameters
  sfixed32 stokes = 5;

}
//////////////////

enum RegionType {
  POINT = 0;
  LINE = 1;
  RECTANGLE = 2;
  CIRCLE = 3;
}

message ReadRegionRequest{
    repeated int32 start = 1;
    repeated int32 count = 2;
    RegionType regionType = 3;
}


//Change To Bytes
message ReadRegionResponse{
    repeated float region = 1;
}



message SpectralProfileRequest {
  string uuid = 1;
  RegionType regionType = 2;
  int32 x = 3;
  int32 y = 4;
  int32 z = 5;
  int32 numPixels = 6;
  int32 width = 7;
  int32 height = 8;
}

//Change TO Bytes
message SpectralProfileResponse {
  repeated float data = 1;
  //bytes data = 1;
}

service H5ReaderService{
  rpc CheckStatus(Empty) returns  (StatusResponse) {}
  rpc OpenFile(FileOpenRequest) returns (StatusResponse) {}
  rpc CloseFile(FileCloseRequest) returns (StatusResponse) {}
  rpc GetFileInfo (FileInfoRequest) returns (FileInfoResponse) {}
  rpc ReadRegion (ReadRegionRequest) returns (ReadRegionResponse) {}
  rpc GetSpectralProfile (SpectralProfileRequest) returns (SpectralProfileResponse) {}

}